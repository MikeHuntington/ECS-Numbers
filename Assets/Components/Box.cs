// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TestGame {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using TestGame;
    using UnityEngine;
    using uFrame.ECS;
    using UniRx;
    
    
    [uFrame.Attributes.uFrameIdentifier("b7a7e69e-2a99-45ba-82a9-629ef1fd9912")]
    public partial class Box : uFrame.ECS.EcsComponent {
        
        private Subject<String> _nameObservable;
        
        private Subject<Color> _colorObservable;
        
        [UnityEngine.SerializeField()]
        private String _name;
        
        [UnityEngine.SerializeField()]
        private Color _color;
        
        public int ComponentID {
            get {
                return 1;
            }
        }
        
        public IObservable<String> nameObservable {
            get {
                if (_nameObservable == null) {
                    _nameObservable = new Subject<String>();
                }
                return _nameObservable;
            }
        }
        
        public IObservable<Color> colorObservable {
            get {
                if (_colorObservable == null) {
                    _colorObservable = new Subject<Color>();
                }
                return _colorObservable;
            }
        }
        
        public String name {
            get {
                return _name;
            }
            set {
                _name = value;
                if (_nameObservable != null) {
                    _nameObservable.OnNext(value);
                }
            }
        }
        
        public Color color {
            get {
                return _color;
            }
            set {
                _color = value;
                if (_colorObservable != null) {
                    _colorObservable.OnNext(value);
                }
            }
        }
    }
}
